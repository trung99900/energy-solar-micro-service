openapi: 3.0.0
info:
  description: |
    This API provides consistency checks between the records stored in the database and the Kafka message queue.
  version: "1.0.0"
  title: Consistency API
  contact:
    email: student@bcit.ca

paths:
  /update:
    post:
      summary: Perform a consistency check and update the results.
      operationId: app.update_consistency_check
      description: |
        This endpoint triggers a consistency check by:
        - Fetching event counts and IDs from the processing, analyzer, and storage services.
        - Comparing the event IDs and Trace IDs between the database and the queue.
        - Identifying missing events in the database or queue.
        - Storing the results in a JSON file.
        The endpoint returns the processing time in milliseconds.
      responses:
        '200':
          description: Consistency check completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  processing_time_ms:
                    type: integer

  /checks:
    get:
      summary: Fetch the results of the most recent consistency check.
      operationId: app.get_checks
      description: |
        This endpoint retrieves the results of the latest consistency check from the JSON data store.
        If no consistency checks have been run, it returns a 404 error.
      responses:
        '200':
          description: Successfully retrieved the results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencyCheckResults'
        '404':
          description: No consistency checks found in the data store.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message indicating no results are available.

components:
  schemas:
    ConsistencyCheckResults:
      type: object
      required:
        - last_updated
        - counts
        - missing_in_db
        - missing_in_queue
      properties:
        last_updated:
          type: string
          format: date-time
          description: The timestamp of when the last check was performed.
        counts:
          type: object
          properties:
            db:
              type: object
              properties:
                energy-consumption:
                  type: integer
                  description: Count of energy generation events in the database.
                solar-generation:
                  type: integer
                  description: Count of solar generation events in the database.
                type:
                  type: integer
            queue:
              type: object
              properties:
                energy-consumption:
                  type: integer
                  description: Count of energy generation events in the queue.
                solar-generation:
                  type: integer
                  description: Count of solar generation events in the queue.
                type:
                  type: integer
            processing:
              type: object
              properties:
                energy-consumption:
                  type: integer
                  description: Count of energy generation events in the processing service.
                solar-generation:
                  type: integer
                  description: Count of solar generation events in the processing service.
                type:
                  type: integer
        missing_in_db:
          type: array
          description: List of events present in the queue but missing from the database.
          items:
            type: object
            properties:
              event_id:
                type: string
                format: uuid
                example: 123e4567-e89b-12d3-a456-426614174000
              trace_id:
                type: string
                format: uuid
                example: 123e4567-e89b-12d3-a456-426614174000
        missing_in_queue:
          type: array
          items:
            type: object
            properties:
              event_id:
                type: string
                format: uuid
                example: 123e4567-e89b-12d3-a456-426614174000
              trace_id:
                type: string
                format: uuid
                example: 123e4567-e89b-12d3-a456-426614174000